[project]
name = "aoc-utils"
version = "0.0.1"
requires-python = ">=3.13"
dependencies = [
    "pytest",
    "requests",
]
description = ""

[project.scripts]
aoc-download = "aoc_utils:download_input"
aoc-submit = "aoc_utils:submit_solution"

[project.optional-dependencies]
dev = [
    "mypy",
    "ruff",
    "types-requests",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
src = ["src"]
fix = true
# cba changing old stuff
exclude = [
    "aoc_2021",
    "aoc_2022",
]
force-exclude = true

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    'W191',   # This conflicts with ruff format
    'E111',   # This conflicts with ruff format
    'E114',   # This conflicts with ruff format
    'E117',   # This conflicts with ruff format
    'D206',   # This conflicts with ruff format
    'D300',   # This conflicts with ruff format
    'Q000',   # This conflicts with ruff format
    'Q001',   # This conflicts with ruff format
    'Q002',   # This conflicts with ruff format
    'Q003',   # This conflicts with ruff format
    'COM812', # This conflicts with ruff format
    'COM819', # This conflicts with ruff format
    'ISC001', # This conflicts with ruff format
    "D",      # I don't care about docs
    "S101",   # Use of assert if fine
    "TD",     # Currently use some todos while refactoring
    "FIX002", # Currently use some todos while refactoring
    "PD010",  # Lots of false positives on non-pandas code
    "PTH123", # open() is fine
    "T201",   # prints are fine here
]
fixable = ["ALL"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.mypy]
files = [
    "src/",
    "aoc_2024/",
]
ignore_missing_imports = true
strict = true
mypy_path = [
    "src",
]


[tool.pytest.ini_options]
pythonpath = [
    "src",
]
